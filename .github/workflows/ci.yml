name: 🚀 CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '18'
  CI: true
  SKIP_ENV_VALIDATION: 'true'
  NEXTAUTH_SECRET: 'ci-fallback-secret-key-for-build-only'
  NEXTAUTH_URL: 'http://localhost:3000'

jobs:
  # Code Quality & Security
  quality:
    name: Code Quality & Security
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: ESLint check
      run: npm run lint
      
    - name: TypeScript check
      run: npm run type-check
      
    - name: Security audit
      run: npm audit --audit-level moderate
      continue-on-error: true
      
    - name: Bundle analysis
      run: npm run build:analyze
      env:
        ANALYZE: true
      continue-on-error: true

  # Testing
  test:
    name: Testing
    runs-on: ubuntu-latest
    needs: quality
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: npm run test:config
      env:
        SKIP_ENV_VALIDATION: 'true'
        CI: 'true'
      
    - name: Security test
      run: npm run security:test
      env:
        CI: 'true'
      continue-on-error: true

  # Build
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [quality, test]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci

    - name: Set build env with fallbacks
      shell: bash
      run: |
        # Prefer secrets if provided; otherwise keep global fallbacks
        if [ -n "${{ secrets.NEXTAUTH_SECRET }}" ]; then echo "NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}" >> $GITHUB_ENV; fi
        if [ -n "${{ secrets.NEXTAUTH_URL }}" ]; then echo "NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }}" >> $GITHUB_ENV; fi
      
    - name: Build application
      run: npm run build
      env:
        NEXTAUTH_SECRET: ${{ env.NEXTAUTH_SECRET }}
        NEXTAUTH_URL: ${{ env.NEXTAUTH_URL }}
        SKIP_ENV_VALIDATION: 'true'
        CI: 'true'
        NODE_ENV: 'production'
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: .next/
        retention-days: 1

  # 🚀 Deploy Notification (manual deployment recommended)
  deploy-notification:
    name: 🚀 Deploy Notification
    runs-on: ubuntu-latest
    needs: [quality, test, build]
    # Geçici olarak devre dışı - GitHub permissions sorunu nedeniyle
    if: false
    
    permissions:
      contents: read
      pull-requests: write
      issues: write
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📝 Deployment Ready Notification
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.repos.createCommitComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            commit_sha: context.sha,
            body: '✅ Build başarılı! Manuel deployment için `npm run deploy` komutunu kullanabilirsiniz.\n\n🔗 Current Live Site: https://fixral-m8b3vn7k7-erdem-erciyas-projects.vercel.app'
          })

  # 📊 Performance Testing (optional)
  performance:
    name: 📊 Performance Testing
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 📥 Install dependencies
      run: npm ci
      
    - name: 📊 Performance test
      run: npm run perf:check
      continue-on-error: true